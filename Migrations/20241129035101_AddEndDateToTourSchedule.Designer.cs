// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApi.Helpers;

namespace WebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241129035101_AddEndDateToTourSchedule")]
    partial class AddEndDateToTourSchedule
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.17");

            modelBuilder.Entity("Tour", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id");

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("int")
                        .HasColumnName("AvailableSlots");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryId");

                    b.Property<decimal>("ChildPrice")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("ChildPrice");

                    b.Property<string>("DepartureLocation")
                        .HasColumnType("longtext")
                        .HasColumnName("DepartureLocation");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("Destination")
                        .HasColumnType("longtext")
                        .HasColumnName("Destination");

                    b.Property<decimal?>("Discount")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Discount");

                    b.Property<int>("Duration")
                        .HasColumnType("int")
                        .HasColumnName("Duration");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EndDate");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("Image");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("IsActive");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("Price");

                    b.Property<decimal>("SingleRoomSurcharge")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("SingleRoomSurcharge");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("StartDate");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("TourSchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AvailableSlots")
                        .HasColumnType("int")
                        .HasColumnName("AvailableSlots");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("EndDate");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("StartDate");

                    b.Property<string>("TourId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("TourSchedules");
                });

            modelBuilder.Entity("WebApi.Entities.Booking", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Id");

                    b.Property<DateTimeOffset>("BookingDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("BookingDate");

                    b.Property<string>("GuestAddress")
                        .HasColumnType("longtext")
                        .HasColumnName("GuestAddress");

                    b.Property<string>("GuestEmail")
                        .HasColumnType("longtext")
                        .HasColumnName("GuestEmail");

                    b.Property<string>("GuestName")
                        .HasColumnType("longtext")
                        .HasColumnName("GuestName");

                    b.Property<string>("GuestPhoneNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("GuestPhoneNumber");

                    b.Property<string>("Notes")
                        .HasColumnType("longtext")
                        .HasColumnName("Notes");

                    b.Property<int>("NumberOfAdults")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfAdults");

                    b.Property<int>("NumberOfChildren")
                        .HasColumnType("int")
                        .HasColumnName("NumberOfChildren");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("longtext")
                        .HasColumnName("PaymentMethod");

                    b.Property<string>("Status")
                        .HasColumnType("longtext")
                        .HasColumnName("Status");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("TotalPrice");

                    b.Property<decimal>("TotalSingleRoomSurcharge")
                        .HasColumnType("decimal(65,30)")
                        .HasColumnName("TotalSingleRoomSurcharge");

                    b.Property<string>("TourId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TourId");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.HasIndex("UserId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("Image")
                        .HasColumnType("longtext")
                        .HasColumnName("Image");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebApi.Entities.Itinerary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("DayNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("DayNumber");

                    b.Property<string>("Description")
                        .HasColumnType("longtext")
                        .HasColumnName("Description");

                    b.Property<string>("TourId")
                        .HasColumnType("varchar(255)")
                        .HasColumnName("TourId");

                    b.HasKey("Id");

                    b.HasIndex("TourId");

                    b.ToTable("Itineraries");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    b.Property<string>("Address")
                        .HasColumnType("longtext")
                        .HasColumnName("Address");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext")
                        .HasColumnName("Avatar");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("DateOfBirth");

                    b.Property<string>("Email")
                        .HasColumnType("longtext")
                        .HasColumnName("Email");

                    b.Property<string>("Gender")
                        .HasColumnType("longtext")
                        .HasColumnName("Gender");

                    b.Property<string>("Name")
                        .HasColumnType("longtext")
                        .HasColumnName("Name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext")
                        .HasColumnName("PasswordHash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("PhoneNumber");

                    b.Property<string>("Role")
                        .HasColumnType("longtext")
                        .HasColumnName("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Tour", b =>
                {
                    b.HasOne("WebApi.Entities.Category", "Category")
                        .WithMany("Tour")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("TourSchedule", b =>
                {
                    b.HasOne("Tour", "Tour")
                        .WithMany("TourSchedules")
                        .HasForeignKey("TourId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("WebApi.Entities.Booking", b =>
                {
                    b.HasOne("Tour", "Tour")
                        .WithMany()
                        .HasForeignKey("TourId");

                    b.HasOne("WebApi.Entities.User", "User")
                        .WithMany("Bookings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Tour");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WebApi.Entities.Itinerary", b =>
                {
                    b.HasOne("Tour", "Tour")
                        .WithMany("Itineraries")
                        .HasForeignKey("TourId");

                    b.Navigation("Tour");
                });

            modelBuilder.Entity("Tour", b =>
                {
                    b.Navigation("Itineraries");

                    b.Navigation("TourSchedules");
                });

            modelBuilder.Entity("WebApi.Entities.Category", b =>
                {
                    b.Navigation("Tour");
                });

            modelBuilder.Entity("WebApi.Entities.User", b =>
                {
                    b.Navigation("Bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
